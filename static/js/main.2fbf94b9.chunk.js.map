{"version":3,"sources":["assets/background.png","assets/icons/home-button-arrow.svg","assets/icons/Github.svg","assets/icons/Gmail.svg","assets/icons/Linkedin.svg","components/Navigate.js","components/Landing.js","components/Sidebar.js","App.js","serviceWorker.js","redux/reducers/dataReducer.js","redux/reducers/index.js","index.js"],"names":["module","exports","GmailIconGroup","icon","display","flex","cursor","marginTop","marginLeft","padding","style","flexDirection","position","top","left","height","alt","id","src","Github","Gmail","Linkedin","Landing","content","transform","pointerEvents","className","width","color","overflowY","Background","textAlign","right","fontSize","Arrow","bottom","backgroundColors","Sidebar","dispatch","useDispatch","useSelector","state","dataReducer","menuOpen","index","setIndex","ind","type","payload","line","background","transition","menu","zIndex","onClick","document","getElementsByClassName","opacity","backdropFilter","justifyContent","App","useState","setTransition","Slider","animation","fillParent","onFirstMount","bullets","buttons","selected","onTransitionStart","onTransitionEnd","e","currentIndex","setTimeout","useEffect","keyHandler","event","key","preventDefault","total","getElementById","props","scrollTop","window","addEventListener","removeEventListener","Boolean","location","hostname","match","action","allReducers","combineReducers","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2fbf94b9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/background.d8d292da.png\";","module.exports = __webpack_public_path__ + \"static/media/home-button-arrow.328561d9.svg\";","module.exports = __webpack_public_path__ + \"static/media/Github.923d38d2.svg\";","module.exports = __webpack_public_path__ + \"static/media/Gmail.958a4c9f.svg\";","module.exports = __webpack_public_path__ + \"static/media/Linkedin.3df0e592.svg\";","import React from 'react';\r\nimport Github from '../assets/icons/Github.svg';\r\nimport Gmail from '../assets/icons/Gmail.svg';\r\nimport Linkedin from '../assets/icons/Linkedin.svg';\r\n\r\nconst GmailIconGroup = () => {\r\n    const content = {\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        position:'absolute',\r\n        top:'20vh',\r\n        left:'2em',\r\n        height:'30vh',\r\n    }\r\n\r\n    const icon = {\r\n        display:'flex',\r\n        flex:1,\r\n        cursor:'pointer',\r\n        marginTop:'10vh',\r\n        marginLeft:'10px',\r\n        padding:'10px',\r\n        \r\n    }\r\n    return (\r\n        <div style={content}>\r\n            <img style={icon} alt='git' id='iconGit' src={Github} height={22}/>\r\n            <img style={icon} alt='gmail' id='iconGit' src={Gmail} height={22}/>\r\n            <img style={icon} alt='linkedin' id='iconGit' src={Linkedin} height={22}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {GmailIconGroup};","import React from 'react';\r\nimport Background from '../assets/background.png';\r\nimport Arrow from '../assets/icons/home-button-arrow.svg';\r\nimport {GmailIconGroup} from './Navigate';\r\n\r\nconst Landing = () => {\r\n\r\n  const outer = {\r\n    height:'100vh',\r\n    width:'100vw',\r\n    color:'white',\r\n    position:'relative',\r\n    overflowY:'scroll',\r\n    \r\n  }\r\n\r\n  const background = {\r\n    position:'absolute',\r\n    top:0,\r\n    left:0,\r\n    height:'100%',\r\n    pointerEvents:'none',\r\n    width:'100%',\r\n  }\r\n  \r\n  const content = {\r\n    transform: 'translateZ(2px)',\r\n    padding:'30px',\r\n    pointerEvents:'none'\r\n    \r\n  }\r\n  const title = {\r\n    position:'absolute',\r\n    top:'45vh',\r\n    textAlign:'center',\r\n    left:0,\r\n    right:0,\r\n    transform:'translate(0,-50%) translateZ(2px)',\r\n    fontSize:'3em',\r\n    pointerEvents: 'none'\r\n\r\n  }\r\n\r\n  const end = {\r\n    position:'absolute',\r\n    bottom:'50px',\r\n    right:'50px',\r\n    fontSize:'1.25em',\r\n    color:'#A6A6A6'\r\n  }\r\n\r\n  return (\r\n    <div className='outer' style={outer}>\r\n        <img alt='' style={background} src={Background} />\r\n        <GmailIconGroup/>\r\n        <div className='content' style={content}>\r\n          Rishabh Chaudhary\r\n          \r\n            <div className='title' style={title}>\r\n                Bringing Life to Ideas<br/>\r\n                <div id='button'>\r\n                  Projects\r\n                  <img id='icon' alt='' src={Arrow} height={16} style={{padding:'5px',marginLeft:'10px'}} />\r\n                </div>\r\n            </div>\r\n        </div>  \r\n        <div className='end' style={{...content,...end}}>\r\n        use arrow keys to navigate\r\n        </div>\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default Landing;","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nconst backgroundColors = ['rgb(63 63 63)', '#1473E6'];\r\n\r\nconst Sidebar = () => {\r\n    const dispatch = useDispatch();\r\n    const { menuOpen, index } = useSelector(state => state.dataReducer);\r\n    // console.log({menuOpen});\r\n    const setIndex = (ind) => {\r\n        dispatch(\r\n          {\r\n            type:'updateState',\r\n            payload:{\r\n              index:ind,\r\n              menuOpen:false\r\n            }\r\n          }\r\n        )\r\n      }\r\n\r\n    const hamburger = {\r\n        position: 'fixed',\r\n        top: '20px',\r\n        right: '50px',\r\n        cursor: 'pointer',\r\n        zIndex: 20\r\n    }\r\n\r\n    const line = {\r\n        width: '28px',\r\n        height: '3px',\r\n        background: 'white',\r\n        marginTop: '5px',\r\n        transition: 'all 0.2s'\r\n    }\r\n    const menu = {\r\n        position: 'fixed',\r\n        width: '350px',\r\n        bottom: 0,\r\n        top: 0,\r\n        background: backgroundColors[index],\r\n        zIndex: 18,\r\n        right: 0,\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className='hamburger' style={hamburger} onClick={() => {\r\n                if (!menuOpen)\r\n                    document.getElementsByClassName('awssld--active')[0].style['transform'] = 'translate3d(-100px, 0px, -600px) rotateY(20deg)';\r\n                if (menuOpen)\r\n                    document.getElementsByClassName('awssld--active')[0].style['transform'] = 'translate3d(0,0,0)';\r\n                dispatch({ type: 'updateState', payload: { menuOpen: !menuOpen } });\r\n\r\n            }} >\r\n                <div style={!menuOpen ? { ...line } : { ...line, opacity: 0 }} />\r\n                <div style={!menuOpen ? { ...line } : { ...line, transform: ' rotate(45deg)' }} />\r\n                <div style={!menuOpen ? { ...line } : { ...line, transform: 'translateY(-8px) rotate(-45deg)' }} />\r\n            </div>\r\n            <div className='menu' style={menuOpen ? menu : { display: 'none' }} >\r\n                <div className='menu-inner' style={{ height: '100%', width: '100%', backdropFilter: 'blur(8px) brightness(0.8)',display:'flex',flexDirection:'column',justifyContent:'center' }}>\r\n                    <div style={{ height: '45vh',display:'flex',flexDirection:'column',justifyContent:'center',textAlign:'center' }}>\r\n                        <div className={index === 0 ? 'menu-items active' : 'menu-items'} onClick={()=>{setIndex(0)}}>\r\n                            Home\r\n                        </div>\r\n                        <div className={index === 1 ? 'menu-items active' : 'menu-items'} onClick={()=>{setIndex(1)}}>\r\n                            Projects\r\n                        </div>\r\n                        <div className={index === 2 ? 'menu-items active' : 'menu-items'} onClick={()=>{setIndex(2)}}>\r\n                            About\r\n                        </div>\r\n                        <div className={index === 3 ? 'menu-items active' : 'menu-items'} onClick={()=>{setIndex(3)}}>\r\n                            Contact\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar;","import React, { useState, useEffect } from 'react';\nimport 'react-awesome-slider/dist/styles.css';\nimport 'react-awesome-slider/dist/custom-animations/cube-animation.css';\nimport AwesomeSlider from 'react-awesome-slider';\nimport Landing from './components/Landing';\nimport Sidebar from './components/Sidebar';\nimport { useSelector, useDispatch } from 'react-redux';\n\n\nconst App = () => {\n  const total = 2;\n  const { index } = useSelector(state => state.dataReducer);\n  const dispatch = useDispatch();\n  const setIndex = (ind) => {\n    dispatch(\n      {\n        type: 'updateState',\n        payload: {\n          index: ind,\n          menuOpen: false\n        }\n      }\n    )\n  }\n  const [transition, setTransition] = useState(true);\n\n\n  const Slider = (\n\n    <AwesomeSlider\n      animation=\"cubeAnimation\"\n      fillParent={true}\n      onFirstMount={() => { setTransition(false) }}\n      bullets={false}\n      buttons={false}\n      selected={index}\n      onTransitionStart={() => setTransition(true)}\n      onTransitionEnd={(e) => {\n        setIndex(e.currentIndex);\n        setTimeout(() => {\n          setTransition(false);\n        }, 400);\n      }}>\n      <div id='0'><Landing /></div>\n      <div id='1'><div style={{\n        height: '100vh',\n        width: '100vw',\n        color: 'white',\n        position: 'relative', background: '#1473E6'\n      }} /></div>\n    </AwesomeSlider>\n  );\n\n  useEffect(() => {\n\n    const keyHandler = (event) => {\n\n      if (transition)\n        return;\n      switch (event.key) {\n        case \"ArrowLeft\":\n          event.preventDefault();\n          setIndex(index === 0 ? total - 1 : index - 1);\n          break;\n\n        case \"ArrowRight\":\n          event.preventDefault();\n          setIndex(index === total - 1 ? 0 : index + 1);\n          break;\n\n        case \"ArrowUp\":\n          event.preventDefault();\n          document.getElementById(Slider.props.selected).scrollTop -= 800;\n          break;\n\n        case \"ArrowDown\":\n          // Down pressed \n          event.preventDefault();\n          document.getElementById(Slider.props.selected).scrollTop += 800;\n          break;\n\n        default:\n          break;\n      }\n    }\n    window.addEventListener(\"keydown\", keyHandler);\n    return () => {\n      window.removeEventListener(\"keydown\", keyHandler);\n    };\n  });\n\n\n  return (\n    <div><Sidebar />{Slider}</div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// will have all methods related to navbar\r\n\r\nconst dataReducer = (state={menuOpen:true,index:0},action) => {\r\n    switch(action.type){\r\n        case 'updateState':\r\n            return {...state,...action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default dataReducer;","import {combineReducers} from 'redux';\r\nimport dataReducer from './dataReducer';\r\n\r\nconst allReducers = combineReducers(\r\n    {\r\n        dataReducer,\r\n    });\r\n\r\nexport default allReducers;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport allReducers from './redux/reducers';\n\nconst store = createStore(allReducers, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}